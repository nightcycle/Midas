"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[327],{39734:e=>{e.exports=JSON.parse('{"functions":[{"name":"GetMidas","desc":"Returns a midas configured for that path. If one already exists for that path it will provide that one.","params":[{"name":"player","desc":"","lua_type":"Player"},{"name":"path","desc":"","lua_type":"string"}],"returns":[{"desc":"","lua_type":"Midas\\r\\n"}],"function_type":"method","source":{"line":43,"path":"src/init.lua"}},{"name":"SetConfig","desc":"Allows for the replacement of the default config table, changing the behavior of the framework.","params":[{"name":"config","desc":"","lua_type":"ConfigData"}],"returns":[{"desc":"","lua_type":"nil\\r\\n"}],"function_type":"method","source":{"line":55,"path":"src/init.lua"}},{"name":"Connect","desc":"Connects the player to the configured pre-existing states. ","params":[{"name":"player","desc":"","lua_type":"Player"}],"returns":[],"function_type":"method","source":{"line":63,"path":"src/init.lua"}},{"name":"InsertTeleportDataEntry","desc":"When a player is being teleported, pass the teleport data prior to teleporting them through this API. This will ensure the session is tracked as continuing.","params":[{"name":"player","desc":"","lua_type":"Player"},{"name":"teleportData","desc":"","lua_type":"{[any]: any}?"}],"returns":[{"desc":"","lua_type":"{\\r\\n\\tMidasAnalyticsData: TeleportDataEntry,\\r\\n\\t[any]: any\\r\\n}\\r\\n"}],"function_type":"method","source":{"line":94,"path":"src/init.lua"}},{"name":"init","desc":"Call this on the server to connect PlayFab prior to firing any events.","params":[{"name":"titleId","desc":"","lua_type":"string"},{"name":"devSecretKey","desc":"","lua_type":"string"}],"returns":[],"function_type":"static","source":{"line":111,"path":"src/init.lua"}}],"properties":[],"types":[],"name":"Interface","desc":"The front-facing module used to integrate a game with the Midas library.","source":{"line":38,"path":"src/init.lua"}}')}}]);