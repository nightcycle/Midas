"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[814],{52881:e=>{e.exports=JSON.parse('{"functions":[{"name":"CreateDataTable","desc":"creates a new datatable\\r","params":[{"name":"name","desc":"","lua_type":"string"},{"name":"id","desc":"","lua_type":"string"}],"returns":[{"desc":"","lua_type":"DataTable<RowData>\\r\\n"}],"function_type":"method","source":{"line":60,"path":"src/DataSet/init.luau"}},{"name":"GetDataTable","desc":"gets a datatable by name\\r","params":[{"name":"name","desc":"","lua_type":"string"}],"returns":[{"desc":"","lua_type":"DataTable<RowData>\\r\\n"}],"function_type":"method","source":{"line":81,"path":"src/DataSet/init.luau"}},{"name":"Post","desc":"posts the current entries from all underlying datatables\\r","params":[{"name":"maxEntriesPerTable","desc":"","lua_type":"number"},{"name":"maxSizePerTable","desc":"","lua_type":"number"},{"name":"delayPerTable","desc":"","lua_type":"number"},{"name":"recursive","desc":"","lua_type":"boolean"}],"returns":[{"desc":"","lua_type":"boolean"},{"desc":"","lua_type":"boolean"},{"desc":"","lua_type":"number"}],"function_type":"method","source":{"line":88,"path":"src/DataSet/init.luau"}},{"name":"GetRowCount","desc":"gets number of rows waiting to be processed\\r","params":[],"returns":[{"desc":"","lua_type":"number\\r\\n"}],"function_type":"method","source":{"line":111,"path":"src/DataSet/init.luau"}},{"name":"GetDataTables","desc":"gets all tables currently stored under the dataset\\r","params":[],"returns":[{"desc":"","lua_type":"{ [number]: DataTable<{ [string]: unknown }> }\\r\\n"}],"function_type":"method","source":{"line":120,"path":"src/DataSet/init.luau"}}],"properties":[],"types":[],"name":"DataSet","desc":"This allows for the organization of datatables into smaller buckets.","source":{"line":56,"path":"src/DataSet/init.luau"}}')}}]);