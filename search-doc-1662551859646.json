[{"title":"Overview","type":0,"sectionRef":"#","url":"docs/intro","content":"Overview local test123 = &quot;test123&quot; local mathStuff = 1 + 1 ","keywords":""},{"title":"Interface","type":0,"sectionRef":"#","url":"api/Interface","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Interface","url":"api/Interface#functions","content":" "},{"title":"init​","type":1,"pageTitle":"Interface","url":"api/Interface#init","content":"&lt;/&gt; Interface.init( titleId: string, devSecretKey: string ) → () Provides a pseudo-RBXScriptSignal which will fire whenever an event is sent via HttpService. Call this on the server to connect PlayFab prior to firing any events.  "},{"title":"SetConfig​","type":1,"pageTitle":"Interface","url":"api/Interface#SetConfig","content":"&lt;/&gt; Interface:SetConfig(deltaConfig: ConfigData) → nil Allows for the replacement of the default config table, changing the behavior of the framework.  "},{"title":"Connect​","type":1,"pageTitle":"Interface","url":"api/Interface#Connect","content":"&lt;/&gt; Interface:Connect(player: Player ) → () Connects the player to the configured pre-existing states.  "},{"title":"InsertTeleportDataEntry​","type":1,"pageTitle":"Interface","url":"api/Interface#InsertTeleportDataEntry","content":"&lt;/&gt; Interface:InsertTeleportDataEntry( player: Player , teleportData: {[any]: any}? ) → { MidasAnalyticsData: TeleportDataEntry, [any]: any } When a player is being teleported, pass the teleport data prior to teleporting them through this API. This will ensure the session is tracked as continuing. "},{"title":"Midas","type":0,"sectionRef":"#","url":"api/Midas","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Midas","url":"api/Midas#functions","content":" "},{"title":"Destroy​","type":1,"pageTitle":"Midas","url":"api/Midas#Destroy","content":"&lt;/&gt; Midas:Destroy() → () Destroys the midas object  "},{"title":"SetTag​","type":1,"pageTitle":"Midas","url":"api/Midas#SetTag","content":"&lt;/&gt; Midas:SetTag(key: string) → nil Adds a tag to all future events from the midas object.  "},{"title":"RemoveTag​","type":1,"pageTitle":"Midas","url":"api/Midas#RemoveTag","content":"&lt;/&gt; Midas:RemoveTag(key: string) → nil Removes tag from all future events from the midas object.  "},{"title":"SetCondition​","type":1,"pageTitle":"Midas","url":"api/Midas#SetCondition","content":"&lt;/&gt; Midas:SetCondition( key: string, func: () → boolean ) → nil Allows for the binding of fire condition blockers. If any return false the midas will not fire.  "},{"title":"SetRoundingPrecision​","type":1,"pageTitle":"Midas","url":"api/Midas#SetRoundingPrecision","content":"&lt;/&gt; Midas:SetRoundingPrecision(exp: number?) → nil Returns the hierarchy path the midas object was created under. Sets the rounding precision of all numbers and vectors to 10^exp paramter. If not exponent parameter is provided it defaults to 0.  "},{"title":"Compile​","type":1,"pageTitle":"Midas","url":"api/Midas#Compile","content":"&lt;/&gt; Midas:Compile() → {[string]: any}?--serveronly Creates a dictionary of values resulting from invoking the bound state functions / objects.  "},{"title":"GetUTC​","type":1,"pageTitle":"Midas","url":"api/Midas#GetUTC","content":"&lt;/&gt; Midas:GetUTC(offset: number?) → string Returns a UTC format compliant timestamp string from the current tick. An optional offset can be applied to this in seconds.  "},{"title":"CanFire​","type":1,"pageTitle":"Midas","url":"api/Midas#CanFire","content":"&lt;/&gt; Midas:CanFire() → boolean Determines if a midas object meets all the bound conditions.  "},{"title":"Fire​","type":1,"pageTitle":"Midas","url":"api/Midas#Fire","content":"&lt;/&gt; Midas:Fire( eventName: string, seriesDuration: number?, includeEndEvent: boolean? ) → nil Fires an event. If series duration is included it will delay sending the event until that duration has passed. It can also fire an end event in that case.  "},{"title":"SetChance​","type":1,"pageTitle":"Midas","url":"api/Midas#SetChance","content":"&lt;/&gt; Midas:SetChance(val: number) → nil Forces the midas object to roll the dice before firing future events. Default is 1, which will always fire the event.  "},{"title":"GetBoundStateCount​","type":1,"pageTitle":"Midas","url":"api/Midas#GetBoundStateCount","content":"&lt;/&gt; Midas:GetBoundStateCount() → number Gets the number of states currently bound to the midas object. "}]